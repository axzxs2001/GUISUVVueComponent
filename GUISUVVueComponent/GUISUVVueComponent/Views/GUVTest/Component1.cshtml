
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>首页</title>
    <script src="~/lib/vue/dist/vue.js"></script>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.js"></script>
    <link href="~/lib/bootstrap/dist/css/bootstrap.css" rel="stylesheet" />

</head>
<body>

    <hr style="border:1px solid #f00" />
    <h3>嵌套组件</h3>
    <div id="example-1" class="container">
        <parent value="数据"></parent>
    </div>
    <script>

        Vue.component('child', {
            props: ['message'],
            template: '<span>子组件值：{{ message }}</span>'
        })
        Vue.component('parent', {
            props: ['value'],
            template: '<div><span>父组件值：{{ value }}</span><br/><child v-bind:message="value"></child></div>'
        })
        new Vue({
            el: '#example-1'
        })
    </script>
    <hr style="border:1px solid #f00" />
    <h3>自定义事件</h3>
    <div id="example-2" class="container">
        <p>{{ total }}</p>
        @*4、把increment事件与incrementTotal绑定*@
        <button-counter v-on:increment="incrementTotal"></button-counter>
        <button-counter v-on:increment="incrementTotal"></button-counter>
    </div>
    <script>
        /*
        组件自定事件，用$emit公布出去，在组件中把事件和相应方法绑定，实现自定义事件的订阅
        */
        Vue.component("button-counter", {
            //1、按钮的click是事件的发源地，会调用clickIncrement方法
            template: '<button v-on:click="clickIncrement">{{counter}}</button>',
            data: function () {
                return {
                    counter: 0
                }
            },
            methods: {
                //2、clickIncrement方法会被触发
                clickIncrement: function () {
                    this.counter += 1
                    //3、会调用increment事件（如果有方法订阅的话）
                    this.$emit('increment')
                }
            }
        })

        new Vue({
            el: '#example-2',
            data: {
                total: 0
            },
            methods: {
                //5、incrementTotal方法被调用到
                incrementTotal: function () {
                    this.total += 1
                }
            }
        })

    </script>





    <hr style="border:1px solid #f00" />
    <h1> Slot</h1>
    <div id="example-3" class="container">
        <app-panent v-bind:artices="artices"></app-panent>
    </div>
    <script>
        //子组件
        Vue.component('app-layout', {
            template: '\
            <div class="row">\
              <header>\
                <slot name="header"></slot>\
              </header>\
              <main>\
                <slot></slot>\
              </main>\
              <footer>\
                <slot name="footer"></slot>\
              </footer>\
            </div>'
        })
        //父组件
        Vue.component('app-panent', {
            props: ["artices"],
            template: '<div class="container">\
            <app-layout v-for="artice in artices">\
              <h3 slot="header">{{artice.title}}</h3>\
              <p>{{artice.content}}</p>\
              <p slot="footer">{{artice.contact}}</p>\
               </app-layout>\
            </div>'
        })
        new Vue({
            el: '#example-3',
            data: {
                artices:[
                    {
                        "title": "这里是标题1",
                        "content": "这里是内容1",
                        "contact": "版权所有2017  Tel: 0411-8989898"
                    },
                    {
                        "title": "这里是标题2",
                        "content": "这里是内容2",
                        "contact": "Tel:0411-8989898"
                    }
                ]
            }
        })
    </script>
    <hr style="border:1px solid #f00" />
    <div id="example-4" class="container">
        <app-pat></app-pat>
    </div>
    <script>
        //子组件
        Vue.component('app-child', {
            template: '\
            <div class="row">\
                <slot message="hello from child"></slot>\
            </div>'
        })
        //父组件
        Vue.component('app-pat', {
       
            template: '<div class="container">\
            <app-child>\
            <template scope="props">\
                <span>hello from parent</span><br/>\
                <span>{{ props.message }}</span>\
            </template>\
            </app-child>\
            </div>'
        })
        new Vue({
            el: '#example-4'
        })
    </script>
    <hr style="border:1px solid #f00" />
    <div id="ex">

    </div>
    <hr style="border:1px solid #f00" />

</body>
</html>
